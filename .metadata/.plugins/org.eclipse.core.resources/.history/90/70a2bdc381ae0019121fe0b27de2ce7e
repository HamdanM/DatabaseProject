
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;

@WebServlet("/Items")
public class Items extends HttpServlet {
		
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static Connection connect = null;
	  private static PreparedStatement preparedStatement = null;
	  private static Statement statement = null;
	  
	  protected void connect_func() throws SQLException {
	        if (connect == null || connect.isClosed()) {
	            try {
	                Class.forName("com.mysql.jdbc.Driver");
	            } catch (ClassNotFoundException e) {
	                throw new SQLException(e);
	            }
		     // Setup the connection with the DB
		    	 connect = (Connection) DriverManager
	    			      .getConnection("jdbc:mysql://localhost:3306/projectdb?useSSL=FALSE&allowPublicKeyRetrieval=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "john","pass1234");
	  System.out.println(connect);
		    	
	        }
	    }
	   protected void disconnect() throws SQLException {
	        if (connect != null && !connect.isClosed()) {
	        	connect.close();
	        }
	    }
	  
	  public void insertItem( String username, String title, String description, String posterid,String postTime, int price) throws SQLException {
	   
		  connect_func();
	   
	    	/////////////////////////////////////////////////////////////////////////Insert tubles to User table
	    	preparedStatement = connect
	    			.prepareStatement("insert into  Items( refUser, title, description , posterid, postTime , price ) values (?, ?, ?, ?, ?, ?, ?)");
	    	preparedStatement.setString(1, username);
	    	preparedStatement.setString(2, title);
	    	preparedStatement.setString(3, description);
	    	preparedStatement.setString(4, posterid);
	    	preparedStatement.setString(5, postTime);
	    	preparedStatement.setInt(6, price);
	    	preparedStatement.executeUpdate();

	      
	  
	    ///////////////////////////////////////////////////////////////////////////////////////////////////
	  }
	  public List<Item> searchItem(String category) throws ClassNotFoundException, SQLException {
	        List<Item> itemsList = new ArrayList<Item>();
	  
		        connect_func();
			    	
			    	/////////////////////////////////////////////////////////////////////////Insert tubles to User table
			    
			    String sql = "SELECT * FROM Items WHERE posterid = ?";
			         				         
				preparedStatement = (PreparedStatement) connect.prepareStatement(sql);
		        preparedStatement.setString(1, category);
			         
		        ResultSet resultSet = preparedStatement.executeQuery();
				       	
			    	  while (resultSet.next()) {
			    		  int itemid1 = resultSet.getInt("itemid"); 
			              String Title = resultSet.getString("title");
			              String Description = resultSet.getString("description");
			              String tags = resultSet.getString("posterid");
			              String date= resultSet.getString("postTime");
			              int price =resultSet.getInt("price");
			              String user = resultSet.getString("refUser");
			              Item item =  new Item(itemid1, Title, Description, date, tags,price,user);

			              itemsList.add(item);  

			    	  }

				    	System.out.println(itemsList);

			  
				return itemsList;
			  }
		    ///////////////////////////////////////////////////////////////////////////////////////////////////
		  
	  public List<Item> listItem() throws SQLException {
	        List<Item> itemsList = new ArrayList<Item>();
  
	
	        connect_func();
		    	/////////////////////////////////////////////////////////////////////////Insert tubles to User table
		    	preparedStatement = connect
		    			.prepareStatement("select * from Items order by price desc");
		    
		    	ResultSet resultSet = preparedStatement.executeQuery();
		    	
		    	  while (resultSet.next()) {
		    		  int itemid1 = resultSet.getInt("itemid"); 
		              String Title = resultSet.getString("title");
		              String Description = resultSet.getString("description");
		              String tags = resultSet.getString("posterid");
		              String date= resultSet.getString("postTime");
		              int price =resultSet.getInt("price");
		              String user = resultSet.getString("refUser");
		              Item item =  new Item(itemid1, Title, Description, date, tags,price,user);
		              itemsList.add(item); 
		          }

		    System.out.println(itemsList);
		    ///////////////////////////////////////////////////////////////////////////////////////////////////
			return itemsList;
		  }

	  public boolean deleteItem(int itemid) throws ClassNotFoundException, SQLException {
		  String sql = "DELETE FROM Items WHERE itemid = ?";        

		  connect_func();
	    
	        preparedStatement = (PreparedStatement) connect.prepareStatement(sql);
	        preparedStatement.setInt(1, itemid);
	         
	        boolean rowDeleted = preparedStatement.executeUpdate() > 0;
	        preparedStatement.close();
//	        disconnect();
	        return rowDeleted;  
	  }
	  
	  public Item getItem(int id) throws SQLException {
	    	Item item = null;
	        String sql = "SELECT * FROM Items WHERE itemid = ?";
	         
	        connect_func();
	         
	        preparedStatement = (PreparedStatement) connect.prepareStatement(sql);
	        preparedStatement.setInt(1, id);
	         
	        ResultSet resultSet = preparedStatement.executeQuery();
	         
	        if (resultSet.next()) {
	        	 int itemid1 = resultSet.getInt("itemid"); 
	              String Title = resultSet.getString("title");
	              String Description = resultSet.getString("description");
	              String tags = resultSet.getString("posterid");
	              String date= resultSet.getString("postTime");
	              int price =resultSet.getInt("price");
	              String user = resultSet.getString("refUser");
	              item =  new Item(itemid1, Title, Description, date, tags,price,user);
	        }
	         
	        resultSet.close();
	      //  statement.close();
	         
	        return item;
	    }
	  
	  public boolean update(Item item) throws SQLException {
	        String sql = "update Items set title = ?, description = ?, posterid = ?, postTime = ?, price = ? where itemid="+item.ItemID+"";
			  connect_func();

	     
	        preparedStatement = (PreparedStatement) connect.prepareStatement(sql);
	        preparedStatement.setInt(1, item.User_UserID);
	        preparedStatement.setString(2, item.Title);
	        preparedStatement.setString(3, item.Description);
	        preparedStatement.setString(4, item.Date);
	        preparedStatement.setString(5, item.Tags);
	         
	        boolean rowUpdated = preparedStatement.executeUpdate() > 0;
	        preparedStatement.close();
//	        disconnect();
	        return rowUpdated;     
	    }
	  
}

